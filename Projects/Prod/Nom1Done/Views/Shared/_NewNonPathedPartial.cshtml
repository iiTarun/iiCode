
@model Nom1Done.DTO.BatchDetailDTO
@{
    Guid CurrentReceiptNomId = Guid.NewGuid();
    Guid CurrentDeliveryNomId = Guid.NewGuid();
    string RowStatusClass = "label-warning";
}
<style>
    #ReceiptTable th {
        min-width: 120px;
    }

    #DeliveryTable th {
        min-width: 120px;
    }

    .cursor {
        cursor: pointer;
    }

    .glyphicon-color {
        color: #FF6C3A !important;
    }
</style>
<div class="ibox-content" style="background-color:#f3f3f4 !important;">
    @using (Html.BeginForm("NewSaveNonPathedHybrid", "PNTNominations", FormMethod.Post))
    {

        @Html.HiddenFor(a => a.Id)
        @Html.HiddenFor(a => a.PipelineId)
        @Html.HiddenFor(a => a.PipelineModelType)


        if (Model.StatusId == 11)
        {
            <div class="row" id="top-search" style="margin:20px !important;">
                <div class="row">
                    <div class="col-md-12">
                        <div class="ibox float-e-margins">
                            <div class="ibox-content" style="padding-top: 20px;">
                                <button id="AddNonPathedBtn" type="button" class="btn btn-w-m btn-success btn-outline" onclick="AddNonPathedNomRow('@Model.PipelineId')"><i class="glyphicon glyphicon-plus"></i> Add</button>
                                <button id="CopyNonPathedBtn" type="button" class="btn btn-w-m btn-success btn-outline" onclick="CopyNonPathedNom(@Model.PipelineId)"><i class="glyphicon glyphicon-duplicate"></i> Copy</button>
                                <button id="RemoveNonPathedBtn" type="button" class="btn btn-w-m btn-success btn-outline" onclick="removeNonPathedNom()"><i class="glyphicon glyphicon-trash"></i> Delete</button>
                                <button onclick="window.location.reload()" type="button" class="btn btn-w-m btn-success btn-outline"><i class="glyphicon glyphicon-refresh"></i> Refresh</button>


                                <button id="ValidateNonPathedBtn" type="button" onclick="ValidateNonPathed()" class="btn btn-w-m btn-success btn-outline"><i class="fa fa-check-square-o"></i> Validate</button>
                                @*<button id="SendNonPathedBtn" type="button" name="Send" onclick="SendNonPathed();" class="btn btn-w-m btn-success btn-outline"><i class="fa fa-plane"></i> Send</button>*@
                                <button type="submit" name="Save" class="btn btn-w-m btn-success btn-outline"><i class="fa fa-save"></i> Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <br />
        <!--All Tabs Div-->
        <div class="row">
            <div class="col-md-12">
                <div class="tabs-container">
                    <ul class="nav nav-tabs" id="tabList">

                        <li class="active"><a data-toggle="tab" href="#ReceiptTab">Receipt</a></li>
                        <li class=""><a data-toggle="tab" href="#DeliveryTab">Delivery</a></li>

                    </ul>

                    <!--All Tabs Body-->
                    <div class="tab-content">
                        <!-- Receipt Tab Body-->
                        <div id="ReceiptTab" class="tab-pane active">
                            <div class="panel-body">

                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="ibox float-e-margins">
                                            <div class="ibox-content">
                                                @*<div class="btn-group">
                                                        <a class="btn" onclick="AddReceiptRow('@Model.PipelineID');"><span class="glyphicon glyphicon-plus-sign glyphicon-color" title="Add"></span></a>
                                                        <a class="btn" onclick="CopyReceiptNomRow(@Model.PipelineID)" href="javascript:void(0)"><span class="glyphicon glyphicon-copy glyphicon-color" title="Copy"></span></a>
                                                        <a class="btn" onclick="removeReceipt();"><span class="glyphicon glyphicon-remove glyphicon-color" title="Delete"></span></a>
                                                    </div>*@
                                                <div class="table-responsive">
                                                    <table id="ReceiptTable" class="table table-bordered table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th><input type="checkbox" class="selectallReceipt" value="0"> Select All</th>
                                                                <th>Status</th>
                                                                <th style="min-width: 120px;">Sched Qty</th>
                                                                <th>RollNom</th>

                                                                <th>TransactionType</th>
                                                                <th>SrvReqContract</th>
                                                                <th>RecLocProp</th>
                                                                <th>RecLocName</th>
                                                                <th>RecLoc</th>
                                                                <th>UpID prop</th>
                                                                <th>UpName</th>
                                                                <th>UpID</th>
                                                                <th>UpContract</th>
                                                                <th>RecQty</th>
                                                                <th>RecRank</th>
                                                                <th>PackageID</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var item in Model.ReceiptNoms)
                                                            {
                                                                var LocationProp = "--Select--";
                                                                var LocationName = "--Select--";
                                                                var Location = "--Select--";
                                                                var TransactionType = "--Select--";
                                                                var UpstreamIDProp = "--Select--";
                                                                var UpstreamIDName = "--Select--";
                                                                var UpstreamID = "--Select--";
                                                                var ServiceRequesterContractCode = "-Select-";

                                                                if (item.StatusId == 1 || item.StatusId == 2 || item.StatusId == 3 || item.StatusId == 4)
                                                                {
                                                                    RowStatusClass = "label-info";
                                                                    item.Status = "In-Process";
                                                                }
                                                                else if (item.StatusId == 5 || item.StatusId == 6)
                                                                {
                                                                    RowStatusClass = "label-success";
                                                                    item.Status = "Submitted";
                                                                }
                                                                else if (item.StatusId == 7)
                                                                {
                                                                    RowStatusClass = "label-success";
                                                                    item.Status = "Accepted";
                                                                }
                                                                else if (item.StatusId == 8 || item.StatusId == 9)
                                                                {
                                                                    RowStatusClass = "label-warning";
                                                                    item.Status = "Exception Occured";
                                                                }
                                                                else if (item.StatusId == 10)
                                                                {
                                                                    RowStatusClass = "label-warning";
                                                                    item.Status = "Rejected";
                                                                }
                                                                else if (item.StatusId == 11)
                                                                {
                                                                    RowStatusClass = "label-warning";
                                                                    item.Status = "Draft";
                                                                }

                                                                if (item.StatusId == 11)
                                                                {
                                                                    <!--Editable Row UI-->
                                                                    <tr class="gradeX" rel="@CurrentReceiptNomId">
                                                                        @Html.Hidden("ReceiptNoms.Index", CurrentReceiptNomId.ToString())
                                                                        @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransactionId", item.TransactionId, new { rel = CurrentReceiptNomId })
                                                                        <td>
                                                                            <input type="checkbox" value="@CurrentReceiptNomId" class="Receiptchkboxes" onchange="ReceiptchkboxesOnChange()" rel="@item.TransactionId">

                                                                        </td>

                                                                        <td class="cursor">
                                                                            @if (item.StatusId == 8 || item.StatusId == 9 || item.StatusId == 10)
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentReceiptNomId" value="@item.StatusId" onclick="OpenPopUp('StatusReason','@CurrentReceiptNomId','@item.TransactionId',@Model.PipelineId)">@item.Status</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentReceiptNomId" value="@item.StatusId">@item.Status</span>
                                                                            }
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].StatusId", item.StatusId, new { @rel = CurrentReceiptNomId })

                                                                        </td>
                                                                        <td>
                                                                            <span></span>
                                                                        </td>
                                                                        <td>
                                                                            @Html.DropDownList("ReceiptNoms[" + CurrentReceiptNomId + "].NomSubCycle", new SelectList(
                                                                                 new List<Object>{
                                                                                                                                                               new { value = "Y" , text = "Yes"  },
                                                                                                                                                               new { value = "N" , text = "No" }
                                                                                 }, "value", "text", item.NomSubCycle), new { @class = "form-control" })
                                                                        </td>


                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('TransactionType','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.TransactionType != null && item.TransactionType != "")
                                                                                {
                                                                                    TransactionType = item.TransactionType;
                                                                                }
                                                                                @TransactionType
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransactionTypeDesc", item.TransactionTypeDesc, new { @rel = CurrentReceiptNomId })
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransactionType", item.TransactionType, new { @rel = CurrentReceiptNomId })
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransTypeMapId", item.TransTypeMapId, new { @rel = CurrentReceiptNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('Contract','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.ServiceRequesterContractCode != null)
                                                                                {
                                                                                    ServiceRequesterContractCode = item.ServiceRequesterContractCode;
                                                                                }
                                                                                @ServiceRequesterContractCode
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ServiceRequesterContractCode", item.ServiceRequesterContractCode, new { @rel = CurrentReceiptNomId })
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ServiceRequesterContractName", item.ServiceRequesterContractName, new { @rel = CurrentReceiptNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('locations','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.ReceiptLocProp != null)
                                                                                {
                                                                                    LocationProp = item.ReceiptLocProp;
                                                                                }
                                                                                @LocationProp
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptLocProp", item.ReceiptLocProp, new { @rel = CurrentReceiptNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('locations','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.ReceiptLocName != null && item.ReceiptLocName != "")
                                                                                {
                                                                                    LocationName = item.ReceiptLocName;
                                                                                }
                                                                                @LocationName
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptLocName", item.ReceiptLocName, new { @rel = CurrentReceiptNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('locations','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.ReceiptLocId != null)
                                                                                {
                                                                                    Location = item.ReceiptLocId;
                                                                                }
                                                                                @Location
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptLocId", item.ReceiptLocId, new { @rel = CurrentReceiptNomId })
                                                                        </td>

                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('CounterParties','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.UpstreamProp != null && item.UpstreamProp != "")
                                                                                {
                                                                                    UpstreamIDProp = item.UpstreamProp;
                                                                                }
                                                                                @UpstreamIDProp
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamProp", item.UpstreamProp, new { @rel = CurrentReceiptNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('CounterParties','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.UpstreamName != null && item.UpstreamName != "")
                                                                                {
                                                                                    UpstreamIDName = item.UpstreamName;
                                                                                }
                                                                                @UpstreamIDName
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamName", item.UpstreamName, new { @rel = CurrentReceiptNomId })
                                                                        </td>

                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('CounterParties','@CurrentReceiptNomId','Receipt',@Model.PipelineId)">
                                                                                @if (item.UpstreamId != null && item.UpstreamId != "")
                                                                                {
                                                                                    UpstreamID = item.UpstreamId;
                                                                                }
                                                                                @UpstreamID
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamId", item.UpstreamId, new { @rel = CurrentReceiptNomId })
                                                                        </td>

                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamK", item.UpstreamK, new { @class = "form-control", @rel = CurrentReceiptNomId })</td>
                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptQty", item.ReceiptQty, new { @class = "form-control", @rel = CurrentReceiptNomId })</td>
                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptRank", item.ReceiptRank, new { @class = "form-control", @rel = CurrentReceiptNomId })</td>
                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].PackageId", item.PackageId, new { @class = "form-control", @rel = CurrentReceiptNomId })</td>
                                                                        @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].NomTrackingId", item.NomTrackingId, new { @rel = CurrentReceiptNomId })


                                                                    </tr>

                                                                }
                                                                else
                                                                {
                                                                    <!--Non-Editable Row UI-->

                                                                    <tr class="gradeX" rel="@CurrentReceiptNomId">
                                                                        @Html.Hidden("ReceiptNoms.Index", CurrentReceiptNomId.ToString())
                                                                        @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransactionId", item.TransactionId, new { rel = CurrentReceiptNomId })
                                                                        <td><input type="checkbox" value="@CurrentReceiptNomId" class="Receiptchkboxes" onchange="ReceiptchkboxesOnChange()" rel="@item.TransactionId"></td>

                                                                        <td class="cursor">
                                                                            @if (item.StatusId == 8 || item.StatusId == 9 || item.StatusId == 10)
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentReceiptNomId" value="@item.StatusId" onclick="OpenPopUp('StatusReason','@CurrentReceiptNomId','@item.TransactionId',@Model.PipelineId)">@item.Status</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentReceiptNomId" value="@item.StatusId">@item.Status</span>
                                                                            }
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].StatusId", item.StatusId, new { @rel = CurrentReceiptNomId })

                                                                        </td>
                                                                        <td>
                                                                            @if (item.StatusId == 7)
                                                                            {
                                                                                <a href="javascript:void(0)" style="color:#FF6C3A !important;" onclick="ShowStsPopUp('@item.TransactionId','@item.NomTrackingId')">View Sched Qty</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span></span>
                                                                            }
                                                                        </td>
                                                                        <td>
                                                                            @Html.DropDownList("ReceiptNoms[" + CurrentReceiptNomId + "].NomSubCycle", new SelectList(
                                                                                 new List<Object>{
                                                                                                                                                               new { value = "Y" , text = "Yes"  },
                                                                                                                                                               new { value = "N" , text = "No" }
                                                                                 }, "value", "text", item.NomSubCycle), new { @class = "form-control", @disabled = "disabled" })
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].NomSubCycle", item.NomSubCycle, new { @rel = CurrentReceiptNomId })
                                                                        </td>


                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.TransactionType != null && item.TransactionType != "")
                                                                                {
                                                                                    TransactionType = item.TransactionType;
                                                                                }
                                                                                @TransactionType
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransactionTypeDesc", item.TransactionTypeDesc, new { @rel = CurrentReceiptNomId })
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransactionType", item.TransactionType, new { @rel = CurrentReceiptNomId })
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].TransTypeMapId", item.TransTypeMapId, new { @rel = CurrentReceiptNomId })
                                                                        </td>
                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.ServiceRequesterContractCode != null && item.ServiceRequesterContractCode != "")
                                                                                {
                                                                                    ServiceRequesterContractCode = item.ServiceRequesterContractCode;
                                                                                }
                                                                                @ServiceRequesterContractCode
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ServiceRequesterContractCode", item.ServiceRequesterContractCode, new { @rel = CurrentReceiptNomId })
                                                                            @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ServiceRequesterContractName", item.ServiceRequesterContractName, new { @rel = CurrentReceiptNomId })
                                                                        </td>
                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.ReceiptLocProp != null && item.ReceiptLocProp != "")
                                                                                {
                                                                                    LocationProp = item.ReceiptLocProp;
                                                                                }
                                                                                @LocationProp
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptLocProp", item.ReceiptLocProp, new { @rel = CurrentReceiptNomId })
                                                                        </td>


                                                                        <td>


                                                                            <span data-toggle="modal">
                                                                                @if (item.ReceiptLocName != null && item.ReceiptLocName != "")
                                                                                {
                                                                                    LocationName = item.ReceiptLocName;
                                                                                }
                                                                                @LocationName
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptLocName", item.ReceiptLocName, new { @rel = CurrentReceiptNomId })
                                                                        </td>


                                                                        <td>


                                                                            <span data-toggle="modal">
                                                                                @if (item.ReceiptLocId != null && item.ReceiptLocId != "")
                                                                                {
                                                                                    Location = item.ReceiptLocId;
                                                                                }
                                                                                @Location
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptLocId", item.ReceiptLocId, new { @rel = CurrentReceiptNomId })
                                                                        </td>



                                                                        <td>


                                                                            <span data-toggle="modal">
                                                                                @if (item.UpstreamProp != null && item.UpstreamProp != "")
                                                                                {
                                                                                    UpstreamIDProp = item.UpstreamProp;
                                                                                }
                                                                                @UpstreamIDProp
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamProp", item.UpstreamProp, new { @rel = CurrentReceiptNomId })
                                                                        </td>


                                                                        <td>


                                                                            <span data-toggle="modal">
                                                                                @if (item.UpstreamName != null && item.UpstreamName != "")
                                                                                {
                                                                                    UpstreamIDName = item.UpstreamName;
                                                                                }
                                                                                @UpstreamIDName
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamName", item.UpstreamName, new { @rel = CurrentReceiptNomId })
                                                                        </td>



                                                                        <td>


                                                                            <span data-toggle="modal">
                                                                                @if (item.UpstreamId != null && item.UpstreamId != "")
                                                                                {
                                                                                    UpstreamID = item.UpstreamId;
                                                                                }
                                                                                @UpstreamID
                                                                            </span>@Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamId", item.UpstreamId, new { @rel = CurrentReceiptNomId })
                                                                        </td>



                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].UpstreamK", item.UpstreamK, new { @class = "form-control", @readonly = "readonly", @rel = CurrentReceiptNomId })</td>


                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptQty", item.ReceiptQty, new { @class = "form-control", @readonly = "readonly", @rel = CurrentReceiptNomId })</td>


                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].ReceiptRank", item.ReceiptRank, new { @class = "form-control", @readonly = "readonly", @rel = CurrentReceiptNomId })</td>


                                                                        <td>@Html.TextBox("ReceiptNoms[" + CurrentReceiptNomId + "].PackageId", item.PackageId, new { @class = "form-control", @readonly = "readonly", @rel = CurrentReceiptNomId })</td>
                                                                        @Html.Hidden("ReceiptNoms[" + CurrentReceiptNomId + "].NomTrackingId", item.NomTrackingId, new { @rel = CurrentReceiptNomId })


                                                                    </tr>

                                                                }

                                                                CurrentReceiptNomId = Guid.NewGuid();
                                                            }

                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- Receipt Tab Body End-->
                        <!-- Delivery Tab Body-->
                        <div id="DeliveryTab" class="tab-pane">
                            <div class="panel-body">

                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="ibox float-e-margins">

                                            <div class="ibox-content">
                                                @*<div class="btn-group">
                                                        <a class="btn" onclick="AddDeliveryRow('@Model.PipelineID');"><span class="glyphicon glyphicon-plus-sign glyphicon-color" title="Add"></span></a>
                                                        <a class="btn" onclick="CopyDeliveryNomRow(@Model.PipelineID)" href="javascript:void(0)"><span class="glyphicon glyphicon-copy glyphicon-color" title="Copy"></span></a>
                                                        <a class="btn" onclick="removeDelivery();"><span class="glyphicon glyphicon-remove glyphicon-color" title="Delete"></span></a>
                                                    </div>*@
                                                <div class="table-responsive">
                                                    <table id="DeliveryTable" class="table table-bordered table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th><input type="checkbox" class="selectallDelivery" value="0"> Select All</th>

                                                                <th>Status</th>
                                                                <th style="min-width:120px;">Sched Qty</th>
                                                                <th>RollNom</th>

                                                                <th>TransactionType</th>
                                                                <th>SrvReqContract</th>
                                                                <th>DelLocProp</th>
                                                                <th>DelLocName</th>
                                                                <th>DelLoc</th>
                                                                <th>DnProp</th>
                                                                <th>DnName</th>
                                                                <th>DnID</th>
                                                                <th>DnContract</th>
                                                                <th>DelQty</th>
                                                                <th>DelRank</th>
                                                                <th>PackageID</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var item in Model.DeliveryNoms)
                                                            {
                                                                var DelLocationProp = "--Select--";
                                                                var DelLocationName = "--Select--";
                                                                var DelLocation = "--Select--";
                                                                var DelTransactionType = "--Select--";
                                                                var DnstreamIDProp = "--Select--";
                                                                var DnstreamIDName = "--Select--";
                                                                var DnstreamID = "--Select--";
                                                                var ServiceRequesterContractCode = "-Select-";


                                                                if (item.StatusId == 1 || item.StatusId == 2 || item.StatusId == 3 || item.StatusId == 4)
                                                                {
                                                                    RowStatusClass = "label-info";
                                                                    item.Status = "In-Process";
                                                                }
                                                                else if (item.StatusId == 5 || item.StatusId == 6)
                                                                {
                                                                    RowStatusClass = "label-success";
                                                                    item.Status = "Submitted";
                                                                }
                                                                else if (item.StatusId == 7)
                                                                {
                                                                    RowStatusClass = "label-success";
                                                                    item.Status = "Accepted";
                                                                }
                                                                else if (item.StatusId == 8 || item.StatusId == 9)
                                                                {
                                                                    RowStatusClass = "label-warning";
                                                                    item.Status = "Exception Occured";
                                                                }
                                                                else if (item.StatusId == 10)
                                                                {
                                                                    RowStatusClass = "label-warning";
                                                                    item.Status = "Rejected";
                                                                }
                                                                else if (item.StatusId == 11)
                                                                {
                                                                    RowStatusClass = "label-warning";
                                                                    item.Status = "Draft";
                                                                }

                                                                if (item.StatusId == 11)
                                                                {
                                                                    <!--Editable Row UI-->

                                                                    <tr class="gradeX" rel="@CurrentDeliveryNomId">
                                                                        @Html.Hidden("DeliveryNoms.Index", CurrentDeliveryNomId.ToString())
                                                                        @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransactionId", item.TransactionId, new { rel = CurrentDeliveryNomId })
                                                                        <td><input type="checkbox" value="@CurrentDeliveryNomId" class="Deliverychkboxes" onchange="DeliverychkboxesOnChange()" rel="@item.TransactionId"></td>

                                                                        <td class="cursor">
                                                                            @if (item.StatusId == 8 || item.StatusId == 9 || item.StatusId == 10)
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentDeliveryNomId" value="@item.StatusId" onclick="OpenPopUp('StatusReason','@CurrentDeliveryNomId','@item.TransactionId',@Model.PipelineId)">@item.Status</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentDeliveryNomId" value="@item.StatusId">@item.Status</span>
                                                                            }
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].StatusId", item.StatusId, new { @rel = CurrentDeliveryNomId })

                                                                        </td>
                                                                        <td>
                                                                            <span></span>
                                                                        </td>
                                                                        <td>
                                                                            @Html.DropDownList("DeliveryNoms[" + CurrentDeliveryNomId + "].NomSubCycle", new SelectList(
                                                                                   new List<Object>{
                                                                                                                                                               new { value = "Y" , text = "Yes"  },
                                                                                                                                                               new { value = "N" , text = "No" }
                                                                                   }, "value", "text", item.NomSubCycle), new { @class = "form-control" })
                                                                        </td>


                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('TransactionType','@CurrentDeliveryNomId','Delivery',@Model.PipelineId)">
                                                                                @if (item.TransactionType != null && item.TransactionType != "")
                                                                                {
                                                                                    DelTransactionType = item.TransactionType;
                                                                                }
                                                                                @DelTransactionType
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransactionTypeDesc", item.TransactionTypeDesc, new { @rel = CurrentDeliveryNomId })
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransactionType", item.TransactionType, new { @rel = CurrentDeliveryNomId })
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransTypeMapId", item.TransTypeMapId, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('Contract','@CurrentDeliveryNomId','Delivery',@Model.PipelineId)">
                                                                                @if (item.ServiceRequesterContractCode != null)
                                                                                {
                                                                                    ServiceRequesterContractCode = item.ServiceRequesterContractCode;
                                                                                }
                                                                                @ServiceRequesterContractCode
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].ServiceRequesterContractCode", item.ServiceRequesterContractCode, new { @rel = CurrentDeliveryNomId })
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].ServiceRequesterContractName", item.ServiceRequesterContractName, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUpSpecialDelLocation('@CurrentDeliveryNomId','Delivery','@Model.PipelineId')">
                                                                                @if (item.DeliveryLocProp != null)
                                                                                {
                                                                                    DelLocationProp = item.DeliveryLocProp;
                                                                                }
                                                                                @DelLocationProp
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryLocProp", item.DeliveryLocProp, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUpSpecialDelLocation('@CurrentDeliveryNomId','Delivery','@Model.PipelineId')">
                                                                                @if (item.DeliveryLocName != null && item.DeliveryLocName != "")
                                                                                {
                                                                                    DelLocationName = item.DeliveryLocName;
                                                                                }
                                                                                @DelLocationName
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryLocName", item.DeliveryLocName, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUpSpecialDelLocation('@CurrentDeliveryNomId','Delivery','@Model.PipelineId')">
                                                                                @if (item.DeliveryLocId != null)
                                                                                {
                                                                                    DelLocation = item.DeliveryLocId;
                                                                                }
                                                                                @DelLocation
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryLocId", item.DeliveryLocId, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('CounterParties','@CurrentDeliveryNomId','Delivery',@Model.PipelineId)">
                                                                                @if (item.DnstreamProp != null && item.DnstreamProp != "")
                                                                                {
                                                                                    DnstreamIDProp = item.DnstreamProp;
                                                                                }
                                                                                @DnstreamIDProp
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamProp", item.DnstreamProp, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('CounterParties','@CurrentDeliveryNomId','Delivery',@Model.PipelineId)">
                                                                                @if (item.DnstreamName != null && item.DnstreamName != "")
                                                                                {
                                                                                    DnstreamIDName = item.DnstreamName;
                                                                                }
                                                                                @DnstreamIDName
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamName", item.DnstreamName, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td class="cursor">
                                                                            <span data-toggle="modal" onclick="OpenPopUp('CounterParties','@CurrentDeliveryNomId','Delivery',@Model.PipelineId)">
                                                                                @if (item.DnstreamId != null && item.DnstreamId != "")
                                                                                {
                                                                                    DnstreamID = item.DnstreamId;
                                                                                }
                                                                                @DnstreamID
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamId", item.DnstreamId, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamK", item.DnstreamK, new { @class = "form-control", @rel = CurrentDeliveryNomId })</td>
                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryQty", item.DeliveryQty, new { @class = "form-control", @rel = CurrentDeliveryNomId })</td>
                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryRank", item.DeliveryRank, new { @class = "form-control", @rel = CurrentDeliveryNomId })</td>
                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].PackageId", item.PackageId, new { @class = "form-control", @rel = CurrentDeliveryNomId })</td>
                                                                        @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].NomTrackingId", item.NomTrackingId, new { @rel = CurrentDeliveryNomId })
                                                                    </tr>


                                                                }
                                                                else
                                                                { <!--Non-Editable Row UI-->

                                                                    <tr class="gradeX" rel="@CurrentDeliveryNomId">
                                                                        @Html.Hidden("DeliveryNoms.Index", CurrentDeliveryNomId.ToString())
                                                                        @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransactionId", item.TransactionId, new { rel = CurrentDeliveryNomId })
                                                                        <td><input type="checkbox" value="@CurrentDeliveryNomId" class="Deliverychkboxes" onchange="DeliverychkboxesOnChange()" rel="@item.TransactionId"></td>



                                                                        <td class="cursor">
                                                                            @if (item.StatusId == 8 || item.StatusId == 9 || item.StatusId == 10)
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentDeliveryNomId" value="@item.StatusId" onclick="OpenPopUp('StatusReason','@CurrentDeliveryNomId','@item.TransactionId',@Model.PipelineId)">@item.Status</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span rel="@item.TransactionId" class="label @RowStatusClass" id="status_@CurrentDeliveryNomId" value="@item.StatusId">@item.Status</span>
                                                                            }
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].StatusId", item.StatusId, new { @rel = CurrentDeliveryNomId })

                                                                        </td>
                                                                        <td>
                                                                            @if (item.StatusId == 7)
                                                                            {
                                                                                <a href="javascript:void(0)" style="color:#FF6C3A !important;" onclick="ShowStsPopUp('@item.TransactionId','@item.NomTrackingId')">View Sched Qty</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span></span>
                                                                            }
                                                                        </td>
                                                                        <td>
                                                                            @Html.DropDownList("DeliveryNoms[" + CurrentDeliveryNomId + "].NomSubCycle", new SelectList(
                                                                                   new List<Object>{
                                                                                                                                                               new { value = "Y" , text = "Yes"  },
                                                                                                                                                               new { value = "N" , text = "No" }
                                                                                   }, "value", "text", item.NomSubCycle), new { @class = "form-control", @disabled = "disabled" })
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].NomSubCycle", item.NomSubCycle, new { @rel = CurrentDeliveryNomId })
                                                                        </td>


                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.TransactionType != null && item.TransactionType != "")
                                                                                {
                                                                                    DelTransactionType = item.TransactionType;
                                                                                }
                                                                                @DelTransactionType
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransactionTypeDesc", item.TransactionTypeDesc, new { @rel = CurrentDeliveryNomId })
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransactionType", item.TransactionType, new { @rel = CurrentDeliveryNomId })
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].TransTypeMapId", item.TransTypeMapId, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.ServiceRequesterContractCode != null && item.ServiceRequesterContractCode != "")
                                                                                {
                                                                                    ServiceRequesterContractCode = item.ServiceRequesterContractCode;
                                                                                }
                                                                                @ServiceRequesterContractCode
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].ServiceRequesterContractCode", item.ServiceRequesterContractCode, new { @rel = CurrentDeliveryNomId })
                                                                            @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].ServiceRequesterContractName", item.ServiceRequesterContractName, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.DeliveryLocProp != null && item.DeliveryLocProp != "")
                                                                                {
                                                                                    DelLocationProp = item.DeliveryLocProp;
                                                                                }
                                                                                @DelLocationProp
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryLocProp", item.DeliveryLocProp, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.DeliveryLocName != null && item.DeliveryLocName != "")
                                                                                {
                                                                                    DelLocationName = item.DeliveryLocName;
                                                                                }
                                                                                @DelLocationName
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryLocName", item.DeliveryLocName, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.DeliveryLocId != null && item.DeliveryLocId != "")
                                                                                {
                                                                                    DelLocation = item.DeliveryLocId;
                                                                                }
                                                                                @DelLocation
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryLocId", item.DeliveryLocId, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.DnstreamProp != null && item.DnstreamProp != "")
                                                                                {
                                                                                    DnstreamIDProp = item.DnstreamProp;
                                                                                }
                                                                                @DnstreamIDProp
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamProp", item.DnstreamProp, new { @rel = CurrentDeliveryNomId })
                                                                        </td>
                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.DnstreamName != null && item.DnstreamName != "")
                                                                                {
                                                                                    DnstreamIDName = item.DnstreamName;
                                                                                }
                                                                                @DnstreamIDName
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamName", item.DnstreamName, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td>
                                                                            <span data-toggle="modal">
                                                                                @if (item.DnstreamId != null && item.DnstreamId != "")
                                                                                {
                                                                                    DnstreamID = item.DnstreamId;
                                                                                }
                                                                                @DnstreamID
                                                                            </span>@Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamId", item.DnstreamId, new { @rel = CurrentDeliveryNomId })
                                                                        </td>

                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].DnstreamK", item.DnstreamK, new { @class = "form-control", @readonly = "readonly", @rel = CurrentDeliveryNomId })</td>
                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryQty", item.DeliveryQty, new { @class = "form-control", @readonly = "readonly", @rel = CurrentDeliveryNomId })</td>
                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].DeliveryRank", item.DeliveryRank, new { @class = "form-control", @readonly = "readonly", @rel = CurrentDeliveryNomId })</td>
                                                                        <td>@Html.TextBox("DeliveryNoms[" + CurrentDeliveryNomId + "].PackageId", item.PackageId, new { @class = "form-control", @readonly = "readonly", @rel = CurrentDeliveryNomId })</td>
                                                                        @Html.Hidden("DeliveryNoms[" + CurrentDeliveryNomId + "].NomTrackingId", item.NomTrackingId, new { @rel = CurrentDeliveryNomId })
                                                                    </tr>

                                                                }

                                                                CurrentDeliveryNomId = Guid.NewGuid();
                                                            }

                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- Delivery Tab Body End-->

                    </div>
                    <!--All Tabs Body End-->
                </div>
            </div>
        </div>
        <!--All Tabs Div End-->
    }
</div>


<script>

    $(document).ready(function () {

        var value = "@ViewBag.Status";

        if (value != "") {
            toastr.success("", "@ViewBag.Status");
        }

        $(function () {
            $('.dtpicker').datepicker({ autoclose: true }).on('changeDate', function (selected) {

                var id = $(this).attr("id");
                var rowId = $(this).attr("rel");
                if (id.indexOf("ReceiptNoms") != -1) {
                    if (id.indexOf("StartDateTime") != -1) {
                        var minDate = new Date(selected.date.valueOf());
                        var endDate = "#ReceiptNoms_" + rowId + "__EndDateTime";
                        $(endDate).datepicker('setStartDate', minDate);

                        var startDate = "#ReceiptNoms_" + rowId + "__StartDateTime";
                        var cycle = "#ReceiptNoms_" + rowId + "__CycleId";
                        var valueCycle = $(cycle).val();
                       // UpdateTimeOnCycle(startDate, endDate, valueCycle);
                    }
                    if (id.indexOf("EndDateTime") != -1) {
                        var maxDate = new Date(selected.date.valueOf());
                        var startDate = "#ReceiptNoms_" + rowId + "__StartDateTime";
                        $(startDate).datepicker('setEndDate', maxDate);

                        var endDate = "#ReceiptNoms_" + rowId + "__EndDateTime";
                        var cycle = "#ReceiptNoms_" + rowId + "__CycleId";
                        var valueCycle = $(cycle).val();
                       // UpdateTimeOnCycle(startDate, endDate, valueCycle);
                    }
                }
                if (id.indexOf("DeliveryNoms") != -1) {
                    if (id.indexOf("StartDateTime") != -1) {
                        var minDate = new Date(selected.date.valueOf());
                        var endDate = "#DeliveryNoms_" + rowId + "__EndDateTime";
                        $(endDate).datepicker('setStartDate', minDate);

                        var startDate = "#DeliveryNoms_" + rowId + "__StartDateTime";
                        var cycle = "#DeliveryNoms_" + rowId + "__CycleId";
                        var valueCycle = $(cycle).val();
                       // UpdateTimeOnCycle(startDate, endDate, valueCycle);
                    }
                    if (id.indexOf("EndDateTime") != -1) {
                        var maxDate = new Date(selected.date.valueOf());
                        var startDate = "#DeliveryNoms_" + rowId + "__StartDateTime";
                        $(startDate).datepicker('setEndDate', maxDate);

                        var endDate = "#DeliveryNoms_" + rowId + "__EndDateTime";
                        var cycle = "#DeliveryNoms_" + rowId + "__CycleId";
                        var valueCycle = $(cycle).val();
                       // UpdateTimeOnCycle(startDate, startDate, valueCycle);
                    }
                }
            });
        });


        //To keep previous clicked tab

        $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
            localStorage.setItem('activeTabNonPathed', $(e.target).attr('href'));
        });
        var activeTab = localStorage.getItem('activeTabNonPathed');
        if (activeTab) {
            $('#tabList a[href="' + activeTab + '"]').tab('show');
        }

        // end code.
        function UpdateTimeOnCycle(startDate, endDate, valueCycle) {

            var startDateValue = $(startDate).val();
            var endDateValue = $(endDate).val();
            var BegginingTime = "";
            var EndTime = "";
            if (valueCycle == 1 || valueCycle == 2) // timeley
            {
                BegginingTime = " 09:00 AM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 3)//intrs day 1
            {
                BegginingTime = " 02:00 PM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 4)//intrs day 2
            {
                BegginingTime = " 06:00 PM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 5)//intrs day 3
            {
                BegginingTime = " 10:00 PM";
                EndTime = " 09:00 AM";
            }

            var startDateOnly = startDateValue.split(" ");
            var endDateOnly = endDateValue.split(" ");
            var finalStartdate = startDateOnly[0].concat(BegginingTime);
            var finalEndDate = endDateOnly[0].concat(EndTime);

            $(startDate).val(finalStartdate);
            $(endDate).val(finalEndDate);
        }

        $(".DeliverycycleSelect").change(function () {

            var rel = $(this).attr("rel");
            var index = rel;
            var startDate = "#DeliveryNoms_" + index + "__StartDateTime";
            var startDateValue = $(startDate).val();
            var endDate = "#DeliveryNoms_" + index + "__EndDateTime";
            var endDateValue = $(endDate).val();
            var cycle = "#DeliveryNoms_" + index + "__CycleId";
            var valueCycle = $(cycle).val();
            var BegginingTime = "";
            var EndTime = "";

            if (valueCycle == 1 || valueCycle == 2) // timeley
            {
                BegginingTime = " 09:00 AM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 3)//intrs day 1
            {
                BegginingTime = " 02:00 PM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 4)//intrs day 2
            {
                BegginingTime = " 06:00 PM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 5)//intrs day 3
            {
                BegginingTime = " 10:00 PM";
                EndTime = " 09:00 AM";
            }

            var startDateOnly = startDateValue.split(" ");
            var endDateOnly = endDateValue.split(" ");
            var finalStartdate = startDateOnly[0].concat(BegginingTime);
            var finalEndDate = endDateOnly[0].concat(EndTime);

            $(startDate).val(finalStartdate);
            $(endDate).val(finalEndDate);


        });


        $(".cycleSelect").change(function () {

            var rel = $(this).attr("rel");
            var index = rel;
            var startDate = "#ReceiptNoms_" + index + "__StartDateTime";
            var startDateValue = $(startDate).val();
            var endDate = "#ReceiptNoms_" + index + "__EndDateTime";
            var endDateValue = $(endDate).val();
            var cycle = "#ReceiptNoms_" + index + "__CycleId";
            var valueCycle = $(cycle).val();
            var BegginingTime = "";
            var EndTime = "";

            if (valueCycle == 1 || valueCycle == 2) // timeley
            {
                BegginingTime = " 09:00 AM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 3)//intrs day 1
            {
                BegginingTime = " 02:00 PM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 4)//intrs day 2
            {
                BegginingTime = " 06:00 PM";
                EndTime = " 09:00 AM";
            }
            else if (valueCycle == 5)//intrs day 3
            {
                BegginingTime = " 10:00 PM";
                EndTime = " 09:00 AM";
            }

            var startDateOnly = startDateValue.split(" ");
            var endDateOnly = endDateValue.split(" ");
            var finalStartdate = startDateOnly[0].concat(BegginingTime);
            var finalEndDate = endDateOnly[0].concat(EndTime);

            $(startDate).val(finalStartdate);
            $(endDate).val(finalEndDate);

        });


        $(".selectallReceipt").click(function () {
            $(".Receiptchkboxes").prop('checked', $(this).prop('checked'));
        });

        $(".selectallDelivery").click(function () {
            $(".Deliverychkboxes").prop('checked', $(this).prop('checked'));
        });
    });

    function OpenPopUpSpecialDelLocation(ClickedRow, PopupFrom, pipelineID) {
        var TransTypeMapId = "#DeliveryNoms_" + ClickedRow + "__TransTypeMapId";
        var ttMapId = $(TransTypeMapId).val();
        if (ttMapId == "") {
            toastr.warning("", "Please select transation type, first.");
        } else {

            $.ajax({
                url: '/PathedNomination/GetLocationPopUpForSpecialHybrid',
                type: 'GET',
                cache: false,
                data: { TransTypeMapId: ttMapId, clickedRow: ClickedRow, popUpFor: PopupFrom, PipelineID: pipelineID },
                dataType: 'html',
                contentType: 'application/html;charset=utf-8'
            })
                .success(function (result) {
                    $('#LocationPopUpModal').html(result);
                    $('#LocationPopUpModal').modal('show');
                   // $('#locationModalTable').DataTable();
                })
                .error(function (xhr, status) {
                    alert(status);
                })
        }
    }

    function ValidateNonPathed() {

        $('#ValidateNonPathedBtn').blur();
        var SelectedChkBox = $('.Receiptchkboxes:checkbox:checked,.Deliverychkboxes:checkbox:checked').length;
        if (SelectedChkBox == 0) {
            toastr.warning("", "Please select at least one nomination to validate");
            return false;
        }
        else {
            var flag = true;
            var Delflag = true;
            Delflag = DeliveryTable();
            var Recflag = true;
            Recflag = ReceiptTable();
            if (Delflag == false || Recflag == false) { flag = false; }
            if (flag == true) { toastr.success("Validation successfully completed."); }
            return flag;
        }

    }


    function DatesValidate(StartDateId, EndDateId) {
        var flag = true;
        var startDate = $(StartDateId).val();
        var endDate = $(EndDateId).val();
        var today = new Date();
        today.setHours(0, 0, 0, 0);
        var sDate = new Date(startDate);
        var eDate = new Date(endDate);
        if (sDate < today) {
            flag = false;
            if (!$(StartDateId).parent("td").hasClass("danger")) {
                $(StartDateId).parent("td").addClass("danger");
            }
        } else {
            if ($(StartDateId).parent("td").hasClass("danger")) {
                $(StartDateId).parent("td").removeClass("danger");
            }
        }
        if (eDate < today) {
            flag = false;
            if (!$(EndDateId).parent("td").hasClass("danger")) {
                $(EndDateId).parent("td").addClass("danger");
            }
        } else {
            if ($(EndDateId).parent("td").hasClass("danger")) {
                $(EndDateId).parent("td").removeClass("danger");
            }
        }
        return flag;
    }



    function DeliveryTable() {
        var flag = true;
        var count = 0;
        var dateMsgCount = 0;
        $('.Deliverychkboxes:checkbox:checked').each(function () {
            var RowCount = $(this).attr("value");
            var StartDateTime = "#DeliveryNoms_" + RowCount + "__StartDateTime";
            var EndDateTime = "#DeliveryNoms_" + RowCount + "__EndDateTime";
            var CycleId = "#DeliveryNoms_" + RowCount + "__CycleId";

            var SrvReqContractCode = "#DeliveryNoms_" + RowCount + "__ServiceRequesterContractCode";
            var LocProp = "#DeliveryNoms_" + RowCount + "__DeliveryLocProp";
            var LocPropName = "#DeliveryNoms_" + RowCount + "__DeliveryLocName";
            var LocPropId = "#DeliveryNoms_" + RowCount + "__DeliveryLocId";
            var TT = "#DeliveryNoms_" + RowCount + "__TransactionType";
            var DnStreamK = "#DeliveryNoms_" + RowCount + "__DnstreamK";
            var DownStreamIDProp = "#DeliveryNoms_" + RowCount + "__DnstreamProp";
            var DownStreamIDName = "#DeliveryNoms_" + RowCount + "__DnstreamName";
            var DownStreamId = "#DeliveryNoms_" + RowCount + "__DnstreamId";
            var DelQty = "#DeliveryNoms_" + RowCount + "__DeliveryQty";
            var Delrank = "#DeliveryNoms_" + RowCount + "__DeliveryRank";
           // var PackageId = "#DeliveryNoms_" + RowCount + "__PackageId";


            columnValidation(StartDateTime);
            columnValidation(EndDateTime);
            columnValidation(CycleId);

            columnValidation(SrvReqContractCode);
            columnValidation(LocProp);
            columnValidation(LocPropName);
            columnValidation(LocPropId);
            columnValidation(TT);
           // columnValidation(DnStreamK);
            columnValidation(DownStreamIDProp);
            columnValidation(DownStreamIDName);
            columnValidation(DownStreamId);
            columnValidation(Delrank);
            columnValidation(DelQty);
           // columnValidation(PackageId);


            if (($(StartDateTime).val() == "") || ($(EndDateTime).val() == "") || ($(CycleId).val() == "") || ($(SrvReqContractCode).val() == "") || ($(LocProp).val() == "") || ($(LocPropName).val() == "") || ($(LocPropId).val() == "") || ($(TT).val() == "") ||  ($(DownStreamId).val() == "") || ($(DownStreamIDProp).val() == "") || ($(DownStreamIDName).val() == "") || ($(Delrank).val() == "") || ($(DelQty).val() == "") ) {
                flag = false;
                count = count + 1;
                if (flag == false && count == 1) {
                    toastr.warning("Please fill all required data in Delivery(*).");
                }
            }

            var isDateValidate = DatesValidate(StartDateTime, EndDateTime);
            if (isDateValidate == false && dateMsgCount == 0) {
                flag = false;
                dateMsgCount++;
                toastr.warning("Past date is not allowed in Start and End date.Please select valid dates.");
            }


        })
        return flag;
    }



    function ReceiptTable() {
        var flag = true;
        var count = 0;
        var dateMsgCount = 0;
        $('.Receiptchkboxes:checkbox:checked').each(function () {
            var RowCount = $(this).attr("value");
            // $(this).attr('checked', false);
            var StartDateTime = "#ReceiptNoms_" + RowCount + "__StartDateTime";
            var EndDateTime = "#ReceiptNoms_" + RowCount + "__EndDateTime";
            var CycleId = "#ReceiptNoms_" + RowCount + "__CycleId";

            var SrvReqKCode = "#ReceiptNoms_" + RowCount + "__ServiceRequesterContractCode";
            var LocProp = "#ReceiptNoms_" + RowCount + "__ReceiptLocProp";
            var LocPropName = "#ReceiptNoms_" + RowCount + "__ReceiptLocName";
            var LocPropId = "#ReceiptNoms_" + RowCount + "__ReceiptLocId";
            var TT = "#ReceiptNoms_" + RowCount + "__TransactionType";
            var UpStreamK = "#ReceiptNoms_" + RowCount + "__UpstreamK";
            var UpStreamIDProp = "#ReceiptNoms_" + RowCount + "__UpstreamProp";
            var UpStreamIDName = "#ReceiptNoms_" + RowCount + "__UpstreamName";
            var UpStreamId = "#ReceiptNoms_" + RowCount + "__UpstreamId";
            var recQty = "#ReceiptNoms_" + RowCount + "__ReceiptQty";
            var recrank = "#ReceiptNoms_" + RowCount + "__ReceiptRank";
           // var PackageId = "#ReceiptNoms_" + RowCount + "__PackageId";


            columnValidation(StartDateTime);
            columnValidation(EndDateTime);
            columnValidation(CycleId);

            columnValidation(SrvReqKCode);
            columnValidation(LocProp);
            columnValidation(LocPropName);
            columnValidation(LocPropId);
            columnValidation(TT);
           // columnValidation(UpStreamK);
            columnValidation(UpStreamIDProp);
            columnValidation(UpStreamIDName);
            columnValidation(UpStreamId);
            columnValidation(recrank);
            columnValidation(recQty);
            //columnValidation(PackageId);

            if (($(StartDateTime).val() == "") || ($(EndDateTime).val() == "") || ($(CycleId).val() == "") || ($(SrvReqKCode).val() == "") || ($(LocProp).val() == "") || ($(LocPropName).val() == "") || ($(LocPropId).val() == "") || ($(TT).val() == "")  || ($(UpStreamId).val() == "") || ($(UpStreamIDProp).val() == "") || ($(UpStreamIDName).val() == "") || ($(recrank).val() == "") || ($(recQty).val() == "") ) {
                flag = false;
                count = count + 1;
                if (flag == false && count == 1) {
                    toastr.warning("Please fill all required data in Receipt(*).");
                }
            }

            var isDateValidate = DatesValidate(StartDateTime, EndDateTime);
            if (isDateValidate == false && dateMsgCount == 0) {
                flag = false;
                dateMsgCount++;
                toastr.warning("Past date is not allowed in Start and End date.Please select valid dates");
            }
        })
        return flag;
    }

    function columnValidation(column) {

        var flag = false;
        var columnID = $(column);
        if ($(column).val() == "" || $(column).val() == "--Select--") {
            flag = true;
            if (!columnID.parent("td").hasClass("danger")) {
                columnID.parent("td").addClass("danger");
            }
        } else {
            if (columnID.parent("td").hasClass("danger")) {
                columnID.parent("td").removeClass("danger");
            }
        }
        return flag;
    }


    function ContractPopUpClick(RequestNo, RequestTypeID, FuelPercentage, RowCount, ContractFrom) {

        if (ContractFrom == "Receipt") {
            var SvcReqName = "#ReceiptNoms_" + RowCount + "__ServiceRequesterContractName";
            var SvcReqNo = "#ReceiptNoms_" + RowCount + "__ServiceRequesterContractCode";
            $('#ContractPopUpModal').modal('hide');
            $(SvcReqName).val(RequestTypeID);
            $(SvcReqNo).val(RequestNo); $(SvcReqNo).parent().find('span').html(RequestNo);
        } else {
            var SvcReqName = "#DeliveryNoms_" + RowCount + "__ServiceRequesterContractName";
            var SvcReqNo = "#DeliveryNoms_" + RowCount + "__ServiceRequesterContractCode";
            $('#ContractPopUpModal').modal('hide');
            $(SvcReqName).val(RequestTypeID);
            $(SvcReqNo).val(RequestNo); $(SvcReqNo).parent().find('span').html(RequestNo);
        }

    }

    function CounterPartyPopUpSelect(Identifier, Name, PropCode, ForRow, PopUpFor) {

        if (PopUpFor == "Receipt") {
            var UpStreamProp = "#ReceiptNoms_" + ForRow + "__UpstreamProp";
            var UpStreamIDName = "#ReceiptNoms_" + ForRow + "__UpstreamName";
            var UpStreamId = "#ReceiptNoms_" + ForRow + "__UpstreamId";
            $('#CounterPartyPopUpModal').modal('hide');
            $(UpStreamProp).val(PropCode); $(UpStreamProp).parent().find('span').html(PropCode);
            $(UpStreamIDName).val(Name); $(UpStreamIDName).parent().find('span').html(Name);
            $(UpStreamId).val(Identifier); $(UpStreamId).parent().find('span').html(Identifier);
        }
        else if (PopUpFor == "Delivery") {
            var DwStreamProp = "#DeliveryNoms_" + ForRow + "__DnstreamProp";
            var DwStreamIDName = "#DeliveryNoms_" + ForRow + "__DnstreamName";
            var DwStreamId = "#DeliveryNoms_" + ForRow + "__DnstreamId";
            $('#CounterPartyPopUpModal').modal('hide');
            $(DwStreamProp).val(PropCode); $(DwStreamProp).parent().find('span').html(PropCode);
            $(DwStreamIDName).val(Name); $(DwStreamIDName).parent().find('span').html(Name);
            $(DwStreamId).val(Identifier); $(DwStreamId).parent().find('span').html(Identifier);
        }
    }

    function CntrTransactionPopUpSelect(transactionCode, TransactionDesc, RowNo, TransactionPopUpFrom, PathType, ttMapId) {

        if (TransactionPopUpFrom == "Receipt") {
            var TransTypeMapId = "#ReceiptNoms_" + RowNo + "__TransTypeMapId";
            var TransactionTypeDesc = "#ReceiptNoms_" + RowNo + "__TransactionTypeDesc";
            var TransactionType = "#ReceiptNoms_" + RowNo + "__TransactionType";
            $('#TransactionTypePopUpModal').modal('hide');
             $(TransTypeMapId).val(ttMapId);
            $(TransactionTypeDesc).val(TransactionDesc);// $(TransactionTypeDesc).parent().find('span').html(TransactionDesc);
            $(TransactionType).val(transactionCode); $(TransactionType).parent().find('span').html(transactionCode);
        }
        else if (TransactionPopUpFrom == "Delivery") {
            var TransTypeMapId = "#DeliveryNoms_" + RowNo + "__TransTypeMapId";
            var TransactionTypeDesc = "#DeliveryNoms_" + RowNo + "__TransactionTypeDesc";
            var TransactionType = "#DeliveryNoms_" + RowNo + "__TransactionType";
            $('#TransactionTypePopUpModal').modal('hide');
             $(TransTypeMapId).val(ttMapId);
            $(TransactionTypeDesc).val(TransactionDesc); //$(TransactionTypeDesc).parent().find('span').html(TransactionDesc);
            $(TransactionType).val(transactionCode); $(TransactionType).parent().find('span').html(transactionCode);
        }
    }

    function CntrLocationPopUpSelect(Name, Id, PropCode, RowNo, LocationPopUpFrom) {
        if (LocationPopUpFrom == "Receipt") {
                var LocProp = "#ReceiptNoms_" + RowNo + "__ReceiptLocProp";
                var LocName = "#ReceiptNoms_" + RowNo + "__ReceiptLocName";
                var LocId = "#ReceiptNoms_" + RowNo + "__ReceiptLocId";
                $('#LocationPopUpModal').modal('hide');
                $(LocProp).val(PropCode); $(LocProp).parent().find('span').html(PropCode);
                $(LocName).val(Name); $(LocName).parent().find('span').html(Name);
                $(LocId).val(Id); $(LocId).parent().find('span').html(Id);
        }
        else if (LocationPopUpFrom == "Delivery") {
            var LocProp = "#DeliveryNoms_" + RowNo + "__DeliveryLocProp";
            var LocName = "#DeliveryNoms_" + RowNo + "__DeliveryLocName";
            var LocId = "#DeliveryNoms_" + RowNo + "__DeliveryLocId";
            $('#LocationPopUpModal').modal('hide');
            $(LocProp).val(PropCode); $(LocProp).parent().find('span').html(PropCode);
            $(LocName).val(Name); $(LocName).parent().find('span').html(Name);
            $(LocId).val(Id); $(LocId).parent().find('span').html(Id);
        }

    }


    function OpenPopUp(partialName, ClickedRow, PopUpFor, PipelineID) {

        $.ajax({
            url: '/NonPathed/NotimationsPartials',
            type: 'GET',
            cache: false,
            data: { partial: partialName, clickedRow: ClickedRow, popUpFor: PopUpFor, PipelineID: PipelineID },
            dataType: 'html',
            contentType: 'application/html;charset=utf-8'
        })
            .success(function (result) {

                if (partialName == 'locations') {
                    $('#LocationPopUpModal').html(result);
                    $('#LocationPopUpModal').modal('show');
                    //$('#locationModalTable').DataTable({
                    //    pageLength: 4,
                    //    "lengthMenu": [[4, 10, 25, 50, -1], ["Default", 10, 25, 50, "All"]]
                    //});
                }
                else if (partialName == 'Contract') {
                    $('#ContractPopUpModal').html(result);
                    $('#ContractPopUpModal').modal('show');
                    $('#ContactModalTable').DataTable();
                }
                else if (partialName == 'CounterParties') {
                    $('#CounterPartyPopUpModal').html(result);
                    $('#CounterPartyPopUpModal').modal('show');
                    $('#CounterPartyModalTable').DataTable();
                } else if (partialName == 'TransactionType') {
                    $('#TransactionTypePopUpModal').html(result);
                    $('#TransactionTypePopUpModal').modal('show');
                    $('#TransactionTypeModalTable').DataTable();
                } else if (partialName == 'StatusReason') {
                    $('#RejectionReasonPopUpModal').html(result);
                    $('#RejectionReasonPopUpModal').modal('show');
                }
            })
            .error(function (xhr, status) {
                alert(status);
            })
    }

    function statusReasonBtnClick() {
        $('#RejectionReasonPopUpModal').modal('hide');
    }


    function SendNonPathed() {

        $('#SendNonPathedBtn').blur();
        var SelectedChkBox = $('.Receiptchkboxes:checkbox:checked,.Deliverychkboxes:checkbox:checked').length;
        if (SelectedChkBox == 0) {
            toastr.warning("", "Please select at least one nomination.");
        }
        else {
            var isValid = ValidateNonPathed();
            var unsavedNom = true;
            var notDraft = true;
            var nomIdsToSend = [];

                      $('.Receiptchkboxes:checkbox:checked,.Deliverychkboxes:checkbox:checked').each(function () {

                        var currentIndex = $(this).attr("value");
                        $(this).attr('checked', false);
                        var statusTag = "#status_" + currentIndex;
                        var statusId = $(statusTag).attr("value");

                        if (statusId == 11) {
                            if (isValid) {
                                var transactionID = $(this).attr('rel');
                                nomIdsToSend.push(transactionID);
                            }
                        } else if (statusId == 0) {
                            unsavedNom = false;
                        } else {
                            notDraft = false;
                        }
                    });

            if (nomIdsToSend.length > 0) {
                $.ajax({
                    url: '/NonPathed/SendNomination',
                    cache: false,
                    data: { transactionIDs: nomIdsToSend },
                    type: 'POST',
                })
                    .success(function (result) {

                        if (result == "True") {
                            toastr.success("", "Successfully sent");
                            location.reload();
                        } else {
                            toastr.error("", "Sending failed");
                        }
                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
            } if (unsavedNom == false) {
                toastr.warning("", "Please save your nom first.");
            }
            if (notDraft == false) {
                toastr.warning("", "Submitted/ Accepted/ Exception/ Rejected nom can't resend.");
            }
            $(".selectall").prop("checked", false);
        }

    }



    function AddDeliveryRow(pipelineid) {
        $.ajax({
            url: '/PathedNomination/AddDeliveryRow',
            data: { PipelineID: pipelineid },
            cache: false,
            type: 'GET',
            success: function (html) {
                $('#DeliveryTable > tbody').prepend(html);
            }
        });
    }
    function AddReceiptRow(pipelineid) {
        $.ajax({
            url: '/PathedNomination/AddReceiptRow',
            data: { PipelineID: pipelineid },
            cache: false,
            type: 'GET',
            success: function (html) {
                $('#ReceiptTable > tbody').prepend(html);
            }
        });
    }

    function CopyDeliveryNomRow(pipelineId) {
        var SelectedChkBox = $('.Deliverychkboxes:checkbox:checked').length;
        if (SelectedChkBox > 1) {
            toastr.info("", "Please select only one nomination at a time.");
        }
        else if (SelectedChkBox == 0) {
            toastr.warning("", "Please select one nomination.");
        } else {
            $.ajax({
                url: '/PathedNomination/AddDeliveryRow',
                data: { PipelineID: pipelineId },
                type: 'GET',
                cache: false,
                success: function (html) {
                    $('#DeliveryTable > tbody').prepend(html);
                    fillDataInDelivery();
                }
            });
        }
    }

    function fillDataInDelivery() {
        var rowIndex = $('#DeliveryTable tbody tr:first').attr('rel');
        var RowCount = $('.Deliverychkboxes:checkbox:checked').attr("value");
        $('.Deliverychkboxes:checkbox:checked').attr('checked', false);
        var obj = {

            StartDateTime: $("#DeliveryNoms_" + RowCount + "__StartDateTime").val(),
            EndDateTime: $("#DeliveryNoms_" + RowCount + "__EndDateTime").val(),
            CycleId: $("#DeliveryNoms_" + RowCount + "__CycleId").val(),
            NomSubCycle: $("#DeliveryNoms_" + RowCount + "__NomSubCycle").val(),

            SrvReqKCode: $("#DeliveryNoms_" + RowCount + "__ServiceRequesterContractCode").val(),
            SrvReqKName: $("#DeliveryNoms_" + RowCount + "__ServiceRequesterContractName").val(),
            DeliveryLocProp: $("#DeliveryNoms_" + RowCount + "__DeliveryLocProp").val(),
            DeliveryLocName: $("#DeliveryNoms_" + RowCount + "__DeliveryLocName").val(),
            DeliveryLocId: $("#DeliveryNoms_" + RowCount + "__DeliveryLocId").val(),
            TransactionTypeDesc: $("#DeliveryNoms_" + RowCount + "__TransactionTypeDesc").val(),
            TransactionType: $("#DeliveryNoms_" + RowCount + "__TransactionType").val(),
            DnstreamProp: $("#DeliveryNoms_" + RowCount + "__DnstreamProp").val(),
            DnstreamName: $("#DeliveryNoms_" + RowCount + "__DnstreamName").val(),
            DnstreamId: $("#DeliveryNoms_" + RowCount + "__DnstreamId").val(),
            DeliveryQty: $("#DeliveryNoms_" + RowCount + "__DeliveryQty").val(),
            DeliveryRank: $("#DeliveryNoms_" + RowCount + "__DeliveryRank").val(),
            PackageId: $("#DeliveryNoms_" + RowCount + "__PackageId").val(),
            DnstreamK: $("#DeliveryNoms_" + RowCount + "__DnstreamK").val()
        }
        var tempValue = "--Select--";

        var today = new Date();
        var oldDate = new Date(obj.StartDateTime);
        if (oldDate < today) {
            var time = (obj.StartDateTime).split(' ')[1] == undefined ? "" : (obj.StartDateTime).split(' ')[1];
            var ampm = (obj.StartDateTime).split(' ')[2] == undefined ? "" : (obj.StartDateTime).split(' ')[2];
            $("#DeliveryNoms_" + rowIndex + "__StartDateTime").val(moment(today).format("MM/DD/YYYY") + ' ' + time + ' ' + ampm);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__StartDateTime").val(obj.StartDateTime);
        }
        var newstartDate = new Date($("#DeliveryNoms_" + rowIndex + "__StartDateTime").val());

        var oldEndDate = new Date(obj.EndDateTime);
        if (oldEndDate < today || oldEndDate < newstartDate) {
            if (oldEndDate < newstartDate) {
                var nextDay = newstartDate.setTime(newstartDate.getTime() + 1 * 86400000);
            } else {
                var nextDay = today.setTime(today.getTime() + 1 * 86400000);
            }
            var time1 = (obj.EndDateTime).split(' ')[1] == undefined ? "" : (obj.EndDateTime).split(' ')[1];
            var ampm1 = (obj.EndDateTime).split(' ')[2] == undefined ? "" : (obj.EndDateTime).split(' ')[2];
            $("#DeliveryNoms_" + rowIndex + "__EndDateTime").val(moment(nextDay).format("MM/DD/YYYY") + ' ' + time1 + ' ' + ampm1);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__EndDateTime").val(obj.EndDateTime);
        }
       // $("#DeliveryNoms_" + rowIndex + "__StartDateTime").val(obj.StartDateTime);
       // $("#DeliveryNoms_" + rowIndex + "__EndDateTime").val(obj.EndDateTime);
        $("#DeliveryNoms_" + rowIndex + "__CycleId").val(obj.CycleId);
        $("#DeliveryNoms_" + rowIndex + "__NomSubCycle").val(obj.NomSubCycle);


        $("#DeliveryNoms_" + rowIndex + "__TransactionType").val(obj.TransactionType);
        if (obj.TransactionType == "") {
            $("#DeliveryNoms_" + rowIndex + "__TransactionType").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__TransactionType").parent().find('span:first').text(obj.TransactionType);
        }

        $("#DeliveryNoms_" + rowIndex + "__ServiceRequesterContractName").val(obj.SrvReqKName);
        $("#DeliveryNoms_" + rowIndex + "__ServiceRequesterContractCode").val(obj.SrvReqKCode);
        if (obj.SrvReqKCode == "") {
            $("#DeliveryNoms_" + rowIndex + "__ServiceRequesterContractCode").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__ServiceRequesterContractCode").parent().find('span:first').text(obj.SrvReqKCode);
        }


        var hiddenTTDes = $("#DeliveryNoms_" + rowIndex + "__TransactionTypeDesc");
        hiddenTTDes.val(obj.TransactionTypeDesc);


        $("#DeliveryNoms_" + rowIndex + "__DeliveryLocProp").val(obj.DeliveryLocProp);
        if (obj.DeliveryLocProp == "") {
            $("#DeliveryNoms_" + rowIndex + "__DeliveryLocProp").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__DeliveryLocProp").parent().find('span:first').text(obj.DeliveryLocProp);
        }

        $("#DeliveryNoms_" + rowIndex + "__DeliveryLocName").val(obj.DeliveryLocName);
        if (obj.DeliveryLocName == "") {
            $("#DeliveryNoms_" + rowIndex + "__DeliveryLocName").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__DeliveryLocName").parent().find('span:first').text(obj.DeliveryLocName);
        }

        $("#DeliveryNoms_" + rowIndex + "__DeliveryLocId").val(obj.DeliveryLocId);
        if (obj.DeliveryLocId == "") {
            $("#DeliveryNoms_" + rowIndex + "__DeliveryLocId").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__DeliveryLocId").parent().find('span:first').text(obj.DeliveryLocId);
        }


        $("#DeliveryNoms_" + rowIndex + "__DnstreamProp").val(obj.DnstreamProp);
        if (obj.DnstreamProp == "") {
            $("#DeliveryNoms_" + rowIndex + "__DnstreamProp").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__DnstreamProp").parent().find('span:first').text(obj.DnstreamProp);
        }


        $("#DeliveryNoms_" + rowIndex + "__DnstreamName").val(obj.DnstreamName);
        if (obj.DnstreamName == "") {
            $("#DeliveryNoms_" + rowIndex + "__DnstreamName").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__DnstreamName").parent().find('span:first').text(obj.DnstreamName);
        }


        $("#DeliveryNoms_" + rowIndex + "__DnstreamId").val(obj.DnstreamId);
        if (obj.DnstreamId == "") {
            $("#DeliveryNoms_" + rowIndex + "__DnstreamId").parent().find('span:first').text(tempValue);
        } else {
            $("#DeliveryNoms_" + rowIndex + "__DnstreamId").parent().find('span:first').text(obj.DnstreamId);
        }


        $("#DeliveryNoms_" + rowIndex + "__DeliveryQty").val(obj.DeliveryQty);
        $("#DeliveryNoms_" + rowIndex + "__DeliveryRank").val(obj.DeliveryRank);
        $("#DeliveryNoms_" + rowIndex + "__PackageId").val(obj.PackageId);
        $("#DeliveryNoms_" + rowIndex + "__DnstreamK").val(obj.DnstreamK);

    }

    function CopyReceiptNomRow(pipelineId) {
        var SelectedChkBox = $('.Receiptchkboxes:checkbox:checked').length;
        if (SelectedChkBox > 1) {
            toastr.info("", "Please select only one nomination at a time.");
        }
        else if (SelectedChkBox == 0) {
            toastr.warning("", "Please select one nomination.");
        } else {
            $.ajax({
                url: '/PathedNomination/AddReceiptRow',
                data: { PipelineID: pipelineId },
                type: 'GET',
                cache: false,
                success: function (html) {
                    $('#ReceiptTable > tbody').prepend(html);
                    fillDataInReceipt();
                    //OnSupRecQtyChange();
                    //OnSupDelQtyChange();
                }
            });
        }
    }

    function fillDataInReceipt() {
        var rowIndex = $('#ReceiptTable tbody tr:first').attr('rel');
        var RowCount = $('.Receiptchkboxes:checkbox:checked').attr("value");
        $('.Receiptchkboxes:checkbox:checked').attr('checked', false);
        var obj = {

            StartDateTime: $("#ReceiptNoms_" + RowCount + "__StartDateTime").val(),
            EndDateTime: $("#ReceiptNoms_" + RowCount + "__EndDateTime").val(),
            CycleId: $("#ReceiptNoms_" + RowCount + "__CycleId").val(),
            NomSubCycle: $("#ReceiptNoms_" + RowCount + "__NomSubCycle").val(),


            SrvReqKName: $("#ReceiptNoms_" + RowCount + "__ServiceRequesterContractName").val(),
            SrvReqKCode: $("#ReceiptNoms_" + RowCount + "__ServiceRequesterContractCode").val(),

            ReceiptLocProp: $("#ReceiptNoms_" + RowCount + "__ReceiptLocProp").val(),
            ReceiptLocName: $("#ReceiptNoms_" + RowCount + "__ReceiptLocName").val(),
            ReceiptLocId: $("#ReceiptNoms_" + RowCount + "__ReceiptLocId").val(),
            TransactionTypeDesc: $("#ReceiptNoms_" + RowCount + "__TransactionTypeDesc").val(),
            TransactionType: $("#ReceiptNoms_" + RowCount + "__TransactionType").val(),
            UpstreamProp: $("#ReceiptNoms_" + RowCount + "__UpstreamProp").val(),
            UpstreamName: $("#ReceiptNoms_" + RowCount + "__UpstreamName").val(),
            UpstreamId: $("#ReceiptNoms_" + RowCount + "__UpstreamId").val(),
            ReceiptQty: $("#ReceiptNoms_" + RowCount + "__ReceiptQty").val(),
            NomSubCycleName: $("#ReceiptNoms_" + RowCount + "__NomSubCycleName").val(),
            ReceiptRank: $("#ReceiptNoms_" + RowCount + "__ReceiptRank").val(),
            MaxRateIndicator: $("#ReceiptNoms_" + RowCount + "__MaxRateIndicator").val(),
            NomTrackingId: $("#ReceiptNoms_" + RowCount + "__NomTrackingId").val(),
            PackageId: $("#ReceiptNoms_" + RowCount + "__PackageId").val(),
            UpstreamK: $("#ReceiptNoms_" + RowCount + "__UpstreamK").val(),
            UpPkgId: $("#ReceiptNoms_" + RowCount + "__UpPkgId").val()
        }
        var tempValue = "--Select--";
        var today = new Date();
        var oldDate = new Date(obj.StartDateTime);
        if (oldDate < today) {
            var time = (obj.StartDateTime).split(' ')[1] == undefined ? "" : (obj.StartDateTime).split(' ')[1];
            var ampm = (obj.StartDateTime).split(' ')[2] == undefined ? "" : (obj.StartDateTime).split(' ')[2];
            $("#ReceiptNoms_" + rowIndex + "__StartDateTime").val(moment(today).format("MM/DD/YYYY") + ' ' + time + ' ' + ampm);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__StartDateTime").val(obj.StartDateTime);
        }
        var newstartDate = new Date($("#ReceiptNoms_" + rowIndex + "__StartDateTime").val());
        var oldEndDate = new Date(obj.EndDateTime);
        if (oldEndDate < today || oldEndDate < newstartDate) {
            if (oldEndDate < newstartDate) {
                var nextDay = newstartDate.setTime(newstartDate.getTime() + 1 * 86400000);
            } else {
                var nextDay = today.setTime(today.getTime() + 1 * 86400000);
            }
            var time1 = (obj.EndDateTime).split(' ')[1] == undefined ? "" : (obj.EndDateTime).split(' ')[1];
            var ampm1 = (obj.EndDateTime).split(' ')[2] == undefined ? "" : (obj.EndDateTime).split(' ')[2];
            $("#ReceiptNoms_" + rowIndex + "__EndDateTime").val(moment(nextDay).format("MM/DD/YYYY") + ' ' + time1 + ' ' + ampm1);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__EndDateTime").val(obj.EndDateTime);
        }
        //$("#ReceiptNoms_" + rowIndex + "__StartDateTime").val(obj.StartDateTime);
        //$("#ReceiptNoms_" + rowIndex + "__EndDateTime").val(obj.EndDateTime);
        $("#ReceiptNoms_" + rowIndex + "__CycleId").val(obj.CycleId);
        $("#ReceiptNoms_" + rowIndex + "__NomSubCycle").val(obj.NomSubCycle);

        $("#ReceiptNoms_" + rowIndex + "__ServiceRequesterContractName").val(obj.SrvReqKName);
        $("#ReceiptNoms_" + rowIndex + "__ServiceRequesterContractCode").val(obj.SrvReqKCode);
        if (obj.SrvReqKCode == "") {
            $("#ReceiptNoms_" + rowIndex + "__ServiceRequesterContractCode").parent().find('span:first').text(tempValue);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__ServiceRequesterContractCode").parent().find('span:first').text(obj.SrvReqKCode);
        }

        $("#ReceiptNoms_" + rowIndex + "__TransactionTypeDesc").val(obj.TransactionTypeDesc);
        var hiddenTT = $("#ReceiptNoms_" + rowIndex + "__TransactionType");
        hiddenTT.val(obj.TransactionType);
        if (obj.TransactionType == "") {
            hiddenTT.parent().find('span:first').text(tempValue);
        } else {
            hiddenTT.parent().find('span:first').text(obj.TransactionType);
        }

        $("#ReceiptNoms_" + rowIndex + "__ReceiptLocProp").val(obj.ReceiptLocProp);
        if (obj.ReceiptLocProp == "") {
            $("#ReceiptNoms_" + rowIndex + "__ReceiptLocProp").parent().find('span:first').text(tempValue);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__ReceiptLocProp").parent().find('span:first').text(obj.ReceiptLocProp);
        }

        $("#ReceiptNoms_" + rowIndex + "__ReceiptLocName").val(obj.ReceiptLocName);
        if (obj.ReceiptLocName == "") {
            $("#ReceiptNoms_" + rowIndex + "__ReceiptLocName").parent().find('span:first').text(tempValue);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__ReceiptLocName").parent().find('span:first').text(obj.ReceiptLocName);
        }

        $("#ReceiptNoms_" + rowIndex + "__ReceiptLocId").val(obj.ReceiptLocId);
        if (obj.ReceiptLocId == "") {
            $("#ReceiptNoms_" + rowIndex + "__ReceiptLocId").parent().find('span:first').text(tempValue);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__ReceiptLocId").parent().find('span:first').text(obj.ReceiptLocId);
        }


        $("#ReceiptNoms_" + rowIndex + "__UpstreamProp").val(obj.UpstreamProp);
        if (obj.UpstreamProp == "") {
            $("#ReceiptNoms_" + rowIndex + "__UpstreamProp").parent().find('span:first').text(tempValue);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__UpstreamProp").parent().find('span:first').text(obj.UpstreamProp);
        }


        $("#ReceiptNoms_" + rowIndex + "__UpstreamName").val(obj.UpstreamName);
        if (obj.UpstreamName == "") {
            $("#ReceiptNoms_" + rowIndex + "__UpstreamName").parent().find('span:first').text(tempValue);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__UpstreamName").parent().find('span:first').text(obj.UpstreamName);
        }


        $("#ReceiptNoms_" + rowIndex + "__UpstreamId").val(obj.UpstreamId);
        if (obj.UpstreamId == "") {
            $("#ReceiptNoms_" + rowIndex + "__UpstreamId").parent().find('span:first').text(tempValue);
        } else {
            $("#ReceiptNoms_" + rowIndex + "__UpstreamId").parent().find('span:first').text(obj.UpstreamId);
        }


        $("#ReceiptNoms_" + rowIndex + "__ReceiptQty").val(obj.ReceiptQty);
        $("#ReceiptNoms_" + rowIndex + "__ReceiptRank").val(obj.ReceiptRank);
        $("#ReceiptNoms_" + rowIndex + "__PackageId").val(obj.PackageId);
        $("#ReceiptNoms_" + rowIndex + "__UpstreamK").val(obj.UpstreamK);


    }


    function removeDelivery() {
        var SelectedChkBox = $('.Deliverychkboxes:checkbox:checked').length;
        if (SelectedChkBox == 0) {
            toastr.remove();
            toastr.warning("", "Please select one nomination.");
        } else {
            var nomIdsToDeleteList = [];
            var IsDeleted = true;
            var notDraft = true;
            var newNom = true;
            $('#DeliveryTable tbody input:checkbox:checked').each(function () {
                var row = $(this).parent().parent();
                if (row.hasClass('newDeliveryRow')) {
                    row.remove();
                    newNom = false;
                    //jQuery('#DeliveryTable tbody input:checkbox:checked').parents("tr").remove();
                } else {
                    var currentIndex = $(this).attr("value");
                    var statusTag = "#status_" + currentIndex;
                    var statusId = $(statusTag).attr("value");
                    if (statusId == 11) {
                        var transactionID = $(this).attr('rel');
                        nomIdsToDeleteList.push(transactionID);
                    } else {
                        $(this).attr('checked', false);
                        notDraft = false;
                    }
                    //var transactionId = row.find('input[type="checkbox"]').attr('rel');
                    //nomIdsToDeleteList.push(transactionId);
                }
            });
            if (nomIdsToDeleteList.length > 0) {
                $.ajax({
                    url: '/NonPathed/DeleteNonPathedNoms',
                    type: 'POST',
                    cache: false,
                    data: { transactionIDs: nomIdsToDeleteList },
                })
               .success(function (result) {
                   if (result == "True") {
                       jQuery('#DeliveryTable tbody input:checkbox:checked').parents("tr").remove();
                   } else {
                       IsDeleted = false;
                   }
                   if (IsDeleted == true) {
                       toastr.success("", "Data deleted successfully");
                   } else {
                       toastr.error("", "Deletion failed");
                   }
                   if (notDraft == false) {
                       toastr.warning("", "You may only delete a Nom in ‘Draft’ or ‘Unsubmitted’ status.");
                   }
               })
              .error(function (xhr, status) {
                  alert(status);
                  toastr.error("", "Deletion failed");
              })
            } else if (notDraft == false) {
                toastr.warning("", "You may only delete a Nom in ‘Draft’ or ‘Unsubmitted’ status.");
            } else if (newNom == false) {
                toastr.success("", "Data deleted successfully");
            }
            $(".selectall").prop("checked", false);
        }
    }


    function removeReceipt() {
        var SelectedChkBox = $('.Receiptchkboxes:checkbox:checked').length;
        if (SelectedChkBox == 0) {
            toastr.remove();
            toastr.warning("", "Please select one nomination.");
        } else {

            var nomIdsToDeleteList = [];
            var IsDeleted = true;
            var notDraft = true;
            var newNom = true;

            $('#ReceiptTable tbody input:checkbox:checked').each(function () {
                var row = $(this).parent().parent();
                if (row.hasClass('newReceiptRow')) {
                    row.remove();
                    newNom = false;
                   // jQuery('#ReceiptTable tbody input:checkbox:checked').parents("tr").remove();
                } else {
                    var currentIndex = $(this).attr("value");
                    var statusTag = "#status_" + currentIndex;
                    var statusId = $(statusTag).attr("value");
                    if (statusId == 11) {
                        var transactionID = $(this).attr('rel');
                        nomIdsToDeleteList.push(transactionID);
                    } else {
                        $(this).attr('checked', false);
                        notDraft = false;
                    }
                    //var transactionId = row.find('input[type="checkbox"]').attr('rel');
                    //nomIdsToDeleteList.push(transactionId);
                }
            });
            if (nomIdsToDeleteList.length > 0) {
                $.ajax({
                    url: '/NonPathed/DeleteNonPathedNoms',// + '?transactionID=' + transactionId,
                    type: 'POST',
                    cache: false,
                    data: { transactionIDs: nomIdsToDeleteList },
                })
               .success(function (result) {
                   if (result == "True") {
                       jQuery('#ReceiptTable tbody input:checkbox:checked').parents("tr").remove();
                   } else {
                       IsDeleted = false;
                   }
                   if (IsDeleted == true) {
                       toastr.success("", "Data deleted successfully");
                   } else {
                       toastr.error("", "Deletion failed");
                   }
                   if (notDraft == false) {
                       toastr.warning("", "You may only delete a Nom in ‘Draft’ or ‘Unsubmitted’ status.");
                   }
               })
              .error(function (xhr, status) {
                  alert(status);
                  toastr.error("", "Deletion failed");
              })
            } else if (notDraft == false) {
                toastr.warning("", "You may only delete a Nom in ‘Draft’ or ‘Unsubmitted’ status.");
            } else if (newNom == false) {
                toastr.success("", "Data deleted successfully");
            }
            $(".selectall").prop("checked", false);
        }
    }



    function ReceiptchkboxesOnChange() {
        if ($(".Receiptchkboxes:checked").length == $(".Receiptchkboxes").length) {
            $(".selectallReceipt").prop("checked", true);
        } else {
            $(".selectallReceipt").prop("checked", false);
        }
    }

    function DeliverychkboxesOnChange() {
        if ($(".Deliverychkboxes:checked").length == $(".Deliverychkboxes").length) {
            $(".selectallDelivery").prop("checked", true);
        } else {
            $(".selectallDelivery").prop("checked", false);
        }
    }

    function FuelValidationReceipt(RowIndex) {

    }


    function validationOnSearch() {
        var flag = true;
        var end = $('#EndDate');
        var start = $('#StartDate');
        var status = $('#StatusId');
        var statusVal = status.val();
        var enddate = end.val();
        var startdate = start.val();
        if (enddate == "") {
            toastr.warning("Please Fill End Date.");
            flag = false;
        }
        if (startdate == "") {
            toastr.warning("Please Fill Start Date.");
            flag = false;
        }
        return flag;
    }


    function AddNonPathedNomRow(pipelineId)
    {
        $('#AddNonPathedBtn').blur();
        var activeTab = localStorage.getItem('activeTabNonPathed');
        if (activeTab == "#DeliveryTab") {
            AddDeliveryRow(pipelineId);
        } else {
            AddReceiptRow(pipelineId);
        }
    }

    function CopyNonPathedNom(pipelineId) {
        $('#CopyNonPathedBtn').blur();
        var activeTab = localStorage.getItem('activeTabNonPathed');
        if (activeTab == "#DeliveryTab") {
            CopyDeliveryNomRow(pipelineId);
        } else {
            CopyReceiptNomRow(pipelineId);
        }
    }

    function removeNonPathedNom() {
        $('#RemoveNonPathedBtn').blur();
        var activeTab = localStorage.getItem('activeTabNonPathed');
        if (activeTab == "#DeliveryTab") {
            removeDelivery();
        } else {
            removeReceipt();
        }
    }

</script>


