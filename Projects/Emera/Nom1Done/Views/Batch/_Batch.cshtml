@model Nom.ViewModel.BatchNomCollection
@{
    //ViewBag.Title = "Index";
    string RowStatusClass = "label-warning";
    var Status = "draft";
}
<style>
    .cursor {
        cursor: pointer;
    }
</style>
<br>
<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox float-e-margins">
                <button type="button" class="btn btn-w-m btn-success btn-outline" onclick="Edit('@Model.pipelineId')"><i class="glyphicon glyphicon-pencil"></i> Edit</button>
                <a href="@Url.Action("Save",new {pipelineId = Model.pipelineId })" class="btn btn-w-m btn-success btn-outline"><i class="glyphicon glyphicon-plus"></i> Add</a>
                <button id="removebatchbtn" type="button" class="btn btn-w-m btn-success btn-outline" onclick="removeBatchNom()"><i class="glyphicon glyphicon-trash"></i> Delete</button>
                <button onclick="window.location.reload()" type="button" class="btn btn-w-m btn-success btn-outline"><i class="glyphicon glyphicon-refresh"></i> Refresh</button>
                <button type="button" class="btn btn-w-m btn-success btn-outline" onclick="copyNom('@Model.pipelineId');"><i class="glyphicon glyphicon-duplicate"></i> Copy</button>
                <button id="SendBatchBtn" onclick="SendNom();" type="button" class="btn btn-w-m btn-success btn-outline"><i class="glyphicon glyphicon-send"></i> Send</button>
                <a href="@Url.Action("Index","SQTSSummary",new { pipelineId = Model.pipelineId,val= "loc" })" id="SchdQtyBtn" type="button" class="btn btn-w-m btn-success btn-outline"><i class="glyphicon glyphicon-list"></i> View Sched Qty</a>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="ibox-content m-b-sm border-bottom">
            <div class="ibox-content">
                @using (Ajax.BeginForm("_Batch","Batch", new AjaxOptions()
                {
                    UpdateTargetId = "MainPartialDiv",
                    HttpMethod = "Post"
                }
                ))
                {
                    @Html.Hidden("NotifierEntity", (object)ViewBag.NotifierEntity)
                    @Html.HiddenFor(a => a.pipelineId)
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="status">StartDate</label>
                                @Html.TextBoxFor(a => a.StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control StartDate", @readonly = "true" })
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="status">EndDate</label>
                                @Html.TextBoxFor(a => a.EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control EndDate", @readonly = "true" })
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="status">Status</label>
                                @Html.DropDownListFor(a => a.StatusId, new SelectList(ViewBag.StatusID, "ID", "Name", Model.StatusId), "-Select-", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group" style="margin-top:22px;">
                                <input type="submit" id="Search" style="background-color:#FF6C3A !important; border-color:#FF6C3A !important;" onclick="return validationOnSearch();" name="Search" class="btn btn-primary" value="Search" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="status">Show Mine Only</label>
                                @Html.CheckBoxFor(a => a.showMine, new { @class = "checkbox" })
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    <table class="table table-bordered table-hover" id="nomination-batch">
                        <thead>
                            <tr>
                                <th style="min-width: 120px; text-align: left;"><input type="checkbox" style="margin-top:0px !important;" class="selectall" value="0"> Select All</th>
                                <th style="min-width: 120px; text-align: left;">Status</th>
                                <th style="min-width: 120px; text-align: left;">Pipeline</th>
                                <th style="min-width: 120px; text-align: left;">Beg Date</th>
                                <th style="min-width: 120px; text-align: left;">End Date</th>
                                <th style="min-width: 120px; text-align: left;">Description</th>
                                <th style="min-width: 120px; text-align: left;">Cycle</th>
                                <th style="min-width: 120px; text-align: left;">Created Date</th>
                                <th style="min-width: 120px; text-align: left;">Created By</th>
                                @*<th style="min-width: 120px; text-align: left;">Schedule</th>*@
                                @*<th style="min-width: 120px;">Schedule Quantity</th>*@
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal" id="RejectionReasonPopUpModal" tabindex="-1" role="dialog" aria-hidden="true">
</div>

@*<script src="https://cdn.datatables.net/1.10.10/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/1.10.10/js/dataTables.bootstrap.min.js" type="text/javascript"></script>*@

<script>
    function ShowMine() {
       // $("#Search").click();
    }
     // -------- To show Success/Failure message after Save batchDetail-Nomination-------//
    $(document).ready(function () {
        setSearchDates();
        var startdate = $('#StartDate').val();
        var sDate=new Date(startdate);
        var enddate = $('#EndDate').val();
        var eDate=new Date(enddate);
        var statusId = $("#StatusId").val();
        var showMine = $("#showMine").val();
        if ($("#showMine").is(":checked")) {
            showMine = true;
        } else {
            showMine = false;
        }
        var dateFilter = { StartDate: sDate.toISOString(), EndDate: eDate.toISOString(), status: statusId, showMine: showMine };

        var table= $('#nomination-batch').DataTable(
        {
            "searching": false,
            "columnDefs": [
                { "width": "5%", "targets": [0] },
                { "className": "text-left custom-middle-align", "targets": [0, 1, 2, 3, 4, 5, 6,7,8] },
                {
                    "orderable": false,
                    "className": 'select-checkbox',
                    "targets":   0
                }
            ],
            "select": {
                "style":    'os',
                "selector": 'td:not(:last-child)'
            },
            "language":
                {
                    "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
                },
            "processing": true,
            "serverSide": true,
            "scrollX": true,
            "scrollCollapse": true,
            "ajax":
                {
                    "url": "/Batch/GetBatch",
                    "data":{pipelineId : @Model.pipelineId, datefilter:dateFilter},
                    "type": "POST",
                    "dataType": "JSON"
                },
            "columns": [
                     { "data": "Id",
                         "render": function ( data, type, row ) {
                             return '<input type="checkbox" rel='+data+' class="chkboxes" onchange="CheckboxonChange()">';
                         },
                         "className": "dt-body-center" },
                    { "data": "StatusID",
                    "render": function(data,type,row){
                        var Status="draft";
                        var RowStatusClass="label-warning";
                        if (data == 1 || data == 2 || data == 3 || data == 4)
                        {
                            RowStatusClass = "label-info";
                            Status = "In-Process";
                        }
                        else if (data == 5 || data == 6)
                        {
                            RowStatusClass = "label-success";
                            Status = "Submitted";
                        }
                        else if (data == 7)
                        {
                            RowStatusClass = "label-success";
                            Status = "Accepted";
                        }
                        else if (data == 8 || data == 9)
                        {
                            RowStatusClass = "label-warning";
                            Status = "Exception Occured";
                        }
                        else if (data == 10)
                        {
                            RowStatusClass = "label-warning";
                            Status = "Rejected";
                        }
                        else if (data == 11)
                        {
                            RowStatusClass = "label-warning";
                            Status = "Draft";
                        }
                        else if (data == 12) {
                            RowStatusClass = "label-info";
                            Status = "Replaced";
                        } else if (data == 0) {
                            RowStatusClass = "label-warning";
                            Status = "GISB Unprocessed";
                        }

                        var openPopup="OpenPopUp('StatusReason','"+row.Id+"','"+row.StatusID+"')";
                        return '<input type="Hidden" id="statusId_'+ row.Id+'" value="'+row.StatusID+'"></input><span rel="' + row.Id + '" id="status_'+ row.Id + '"  class="label '+ RowStatusClass +'" onclick="'+openPopup+'">'+Status+'</span>'
                    },
                    "class":"cursor",
                    "orderable":false
                    },
                    { "data": "PipelineName",
                    "render": function (data, type, row) {
                        var urlHref = "@Url.Action("Index","PNTNominations")?BatchId=" + row.Id + "&pipelineId=" + row.PipelineId;
                        var result = '<a href=' + urlHref + '>' + row.PipelineName + '</a>';
                        return result;

                    }
                    },
                    { "data": "DateBeg",
                        "render": function(data){
                            return moment(data).format("MM/DD/YYYY");
                        }
                    } ,
                    { "data": "DateEnd" ,
                        "render": function(data){
                            return moment(data).format("MM/DD/YYYY");
                        }},
                    { "data": "Description" },
                    { "data": "Cycle" },
                    { "data": "CreatedDate" ,
                        "render": function(data){
                            return moment(data).format("MM/DD/YYYY");
                        }
                    },
                    {"data":"CreaterName"}
                    //{ "data": "ScheduledDate",
                    //    "render": function(data){
                    //        return moment(data).format("MM/DD/YYYY");
                    //    }
                    //}
            ]
        });

        //setInterval( function () {
        //    table.ajax.reload( null, false ); // user paging is not reset on reload
        //}, 30000 );
        

        $(".selectall").click(function () {
            $(".chkboxes").prop('checked', $(this).prop('checked'));
        });

        //$(".chkboxes").onchange(function () {

        //    if ($(".chkboxes:checked").length == (($(".chkboxes").length)-1)) {
        //        $(".selectall").prop("checked", $(this).prop('checked'));
        //    } else {
        //        $(".selectall").prop("checked", false);
        //    }
        //});

        var value = '@ViewBag.Status';

        if (value != "") {
            toastr.success("", "@ViewBag.Status");
        }


    // -------- To show Calender in Start and End date to search batch-------//
        $(function () {
            $("#StartDate").datepicker({
                todayBtn: 1,
                autoclose: true,
            }).on('changeDate', function (selected) {
                var minDate = new Date(selected.date.valueOf());
                $('#EndDate').datepicker('setStartDate', minDate);
            });

            $("#EndDate").datepicker({ autoclose: true })
                .on('changeDate', function (selected) {
                    var maxDate = new Date(selected.date.valueOf());
                    $('#StartDate').datepicker('setEndDate', maxDate);
                });
        });
    });

    function CheckboxonChange(){
        if ($(".chkboxes:checked").length == (($(".chkboxes").length))) {
            $(".selectall").prop("checked", true);
        } else {
            $(".selectall").prop("checked", false);
        }
    }


    // -------- To Send Nomination batch -------//
    // TODO:- Advanced Validation before Send  --- Whether Matrix is complete or not?
    function SendNom() {

        var SelectedChkBox = $('.chkboxes:checkbox:checked').length;
        if (SelectedChkBox == 0) {
            toastr.warning("", "Please select one nomination.");
        }
        else {
            var nomIdsToSend = [];
            $('.chkboxes:checkbox:checked').each(function () { 
                var row= $(this).parent().parent();
                var cols=row.find("td");
                var startDate=cols[3].innerText;
                var endDate=cols[4].innerText;
                var Sdate=new Date(startDate);
                var Edate=new Date(endDate);
                var today=new Date();
                today.setHours(0, 0, 0, 0);
                if(startDate > Edate){
                    toastr.warning("Beg date is greater than End flow date. Please, select valid Dates.");
                }else if(Sdate < today || Edate < today){
                    toastr.warning("You entered Past flow date. Please, select valid Date.");
                }else{
                    var transactionID = $(this).attr('rel');
                    nomIdsToSend.push(transactionID);
                }
            })
            if (nomIdsToSend.length > 0)
            {
                $.ajax({
                    url: '/Batch/SendNomination',// + '?transactionID=' + transactionID,
                    data: { transactionIDs: nomIdsToSend },
                    type: 'POST',
                })
               .success(function (result) {
                   if (result == "True") {
                       toastr.success("", "Successfully Sent.");
                       $('.chkboxes:checkbox:checked').attr('checked', false);
                   } else {
                       toastr.error("", "Sending failed");

                   }
               })
              .error(function (xhr, status) {
                  alert(status);
                  toastr.error("", "Sending failed");
                  $('.chkboxes:checkbox:checked').attr('checked', false);
              })
            }
            $('#SendBatchBtn').blur();
            $(".selectall").prop("checked", false);
        }
    }


    // -------- To Validate Before Search NOM-------//
    function validationOnSearch() {
        var flag = true;
        var end = $('#EndDate');
        var start = $('#StartDate');
        var status = $('#StatusId');
        var statusVal = status.val();
        var enddate = end.val();
        var startdate = start.val();
        if (enddate == "") {
            toastr.warning("Please Fill End Date.");
            flag = false;
        }
        if (startdate == "") {
            toastr.warning("Please Fill Start Date.");
            flag = false;
        }
        return flag;
    }



    // -------- To remove selected Nom from the batch table-------//

    function removeBatchNom() {

        var SelectedChkBox = $('.chkboxes:checkbox:checked').length;

        if (SelectedChkBox == 0) {
            toastr.warning("", "Please select one nomination.");
        } else {
            var nomIdsToDeleteList = [];
            var IsDeleted = true;
            var notDraft=true;  
            var newNom=true;
            $('#nomination-batch tbody .chkboxes:checkbox:checked').each(function () {
              
                 var currentIndex = $(this).attr("rel");                   
                 var statusTag = "#statusId_" + currentIndex;
                 var statusId = $(statusTag).val();                
                if (statusId == 11) {                                                 
                    var transactionID = $(this).attr('rel');
                   nomIdsToDeleteList.push(transactionID);                                         
                }else{
                   $(this).attr('checked', false); 
                    notDraft=false;
                }   
                 //var row = $(this).parent().parent();
                // var transactionId = row.find('input[type="checkbox"]').attr('rel');
               // nomIdsToDeleteList.push(transactionId);
            });

            if (nomIdsToDeleteList.length > 0) {
                $.ajax({
                    url: '/Batch/DeleteBatchNom',// + '?transactionID=' + transactionId,
                    type: 'POST',
                    data: { transactionIDs: nomIdsToDeleteList },
                })
                 .success(function (result) {
                     if (result == "True") {
                         jQuery('#nomination-batch tbody input:checkbox:checked').parents("tr").remove();
                         toastr.success("", "Data deleted successfully");
                     } else {
                         toastr.error("", "Deletion failed");
                     }
                     if(notDraft==false){
                         toastr.warning("", "You may only delete a Nom in ‘Draft’ or ‘Unsubmitted’ status.");
                     }
                 })
                .error(function (xhr, status) {
                    alert(status);
                    toastr.error("", "Deletion failed");
                })
            }else if(notDraft==false){
                toastr.warning("", "You may only delete a Nom in ‘Draft’ or ‘Unsubmitted’ status.");
            }
            $('#removebatchbtn').blur();
            $(".selectall").prop("checked", false);
        }

    }




    function copyNom(pipelineId) {
        var SelectedChkBox = $('.chkboxes:checkbox:checked').length;
        if (SelectedChkBox > 1) {
            toastr.info("", "Please select only one nomination at a time.");
        }
        else if (SelectedChkBox == 0) {
            toastr.warning("", "Please select one nomination.");
        } else {
            $('.chkboxes:checkbox:checked').each(function () {
                var transactionID = $(this).attr('rel');
                $.ajax({
                    url: '@Url.Action("CopyNomination")',
                    data: { transactionID: transactionID, pipelineid: pipelineId },
                    type: 'GET',
                })
               .success(function (result) {

                   if(result=="True"){
                       toastr.success("", "Data is copied");
                       $('.chkboxes:checkbox:checked').attr('checked', false);
                       window.location.reload();
                   }else{
                       toastr.success("", "Data is not copied.");
                   }
               })
              .error(function (xhr, status) {

                  alert(status);
                  $('.chkboxes:checkbox:checked').attr('checked', false);
              })
            })
        }
    }

    function statusReasonBtnClick()
    {
        $('#RejectionReasonPopUpModal').modal('hide');
    }

    function OpenPopUp(partialName, transactionId,StatusID)
    {
       
       
        if (StatusID == 8 || StatusID == 9 || StatusID == 10){
            $.ajax({
                url: '/Batch/NotimationsPartials',//?partial=' + partialName,
                type: 'GET',
                data: { partial: partialName, popUpFor: transactionId},
                dataType: 'html',
                contentType: 'application/html;charset=utf-8'
            })
                   .success(function (result) {
                       if (partialName == 'StatusReason') {
                           $('#RejectionReasonPopUpModal').html(result);
                           $('#RejectionReasonPopUpModal').modal('show');
                       }
                   })
                   .error(function (xhr, status) {
                       alert(status);
                   })
        }


    }

    function Edit(pipelineId){
        var SelectedChkBox = $('.chkboxes:checkbox:checked').length;
        if (SelectedChkBox > 1) {
            toastr.info("", "Please select only one nomination at a time.");
        }
        else if (SelectedChkBox == 0) {
            toastr.warning("", "Please select one nomination.");
        } else {
            $('.chkboxes:checkbox:checked').each(function () {
                var transactionID = $(this).attr('rel');
                $.ajax({
                    url: '/Batch/Edit',
                    data: { pipelineId: pipelineId,batchId:transactionID },
                    type: 'GET',
                })
                 .success(function (result) {

                     $('#RejectionReasonPopUpModal').html(result);
                     $('#RejectionReasonPopUpModal').modal('show');
                 })
                .error(function (xhr, status) {
                    alert(status);
                })

            });
        }


    }
    
    // -------- Script Ended-------//
</script>



